{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState } from 'react';\nimport { api } from \"../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\nexport function AuthContextProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isUserLoading = _useState4[0],\n    setIsUserLoading = _useState4[1];\n  function signIn(email, password) {\n    var _sign$data, sign;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setIsUserLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.post('/users/signin', {\n              email: email.trim().toLowerCase(),\n              password: password.trim()\n            }));\n          case 4:\n            sign = _context.sent;\n            if (sign.status === 200 && (_sign$data = sign.data) != null && _sign$data.accessToken) {\n              api.defaults.headers.common['Authorization'] = \"Bearer \" + sign.data.accessToken;\n            }\n            _context.next = 12;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            throw _context.t0;\n          case 12:\n            _context.prev = 12;\n            setIsUserLoading(false);\n            return _context.finish(12);\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8, 12, 15]], Promise);\n  }\n  return _jsx(AuthContext.Provider, {\n    value: {\n      signIn: signIn,\n      isUserLoading: isUserLoading,\n      user: user\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["createContext","useState","api","AuthContext","AuthContextProvider","children","user","setUser","isUserLoading","setIsUserLoading","signIn","email","password","post","trim","toLowerCase","sign","status","data","accessToken","defaults","headers","common","console","log"],"sources":["/home/pedro/Documentos/IFMS/projetos/ape-safari-urbano/mobile/src/contexts/AuthContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useState } from 'react'\nimport { api } from '../services/api'\n\ninterface UserProps {\n    name: string\n    avatarUrl: string\n}\n\ninterface ResponseProps {\n    status: number\n    accessToken?: string\n}\n\ninterface AuthProviderProps {\n    children: ReactNode\n}\n\nexport interface AuthContextDataProps {\n    user: UserProps\n    isUserLoading: boolean\n    signIn: (email: string, password: string) => Promise<void>\n}\n\nexport const AuthContext = createContext({} as AuthContextDataProps)\n\nexport function AuthContextProvider({ children }: AuthProviderProps) {\n    const [user, setUser] = useState<UserProps>({} as UserProps)\n    const [isUserLoading, setIsUserLoading] = useState(false)\n\n    async function signIn(email: string, password: string) {\n        try {\n            setIsUserLoading(true)\n\n            const sign = await api.post('/users/signin', { \n                email: email.trim().toLowerCase(),\n                password: password.trim(),\n            })\n\n            if (sign.status === 200 && sign.data?.accessToken) {\n                api.defaults.headers.common['Authorization'] = `Bearer ${sign.data.accessToken}`\n            }\n        }\n        catch (err) {\n            console.log(err)\n            throw err\n        }\n        finally {\n            setIsUserLoading(false)\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            signIn,\n            isUserLoading,\n            user\n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAaC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,GAAG;AAAyB;AAsBrC,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAC,CAAC,CAAC,CAAyB;AAEpE,OAAO,SAASI,mBAAmB,OAAkC;EAAA,IAA/BC,QAAQ,QAARA,QAAQ;EAC1C,gBAAwBJ,QAAQ,CAAY,CAAC,CAAC,CAAc;IAAA;IAArDK,IAAI;IAAEC,OAAO;EACpB,iBAA0CN,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlDO,aAAa;IAAEC,gBAAgB;EAEtC,SAAeC,MAAM,CAACC,KAAa,EAAEC,QAAgB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAE7CH,gBAAgB,CAAC,IAAI,CAAC;YAAA;YAAA,iCAEHP,GAAG,CAACW,IAAI,CAAC,eAAe,EAAE;cACzCF,KAAK,EAAEA,KAAK,CAACG,IAAI,EAAE,CAACC,WAAW,EAAE;cACjCH,QAAQ,EAAEA,QAAQ,CAACE,IAAI;YAC3B,CAAC,CAAC;UAAA;YAHIE,IAAI;YAKV,IAAIA,IAAI,CAACC,MAAM,KAAK,GAAG,kBAAID,IAAI,CAACE,IAAI,aAAT,WAAWC,WAAW,EAAE;cAC/CjB,GAAG,CAACkB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,eAAaN,IAAI,CAACE,IAAI,CAACC,WAAa;YACpF;YAAC;YAAA;UAAA;YAAA;YAAA;YAGDI,OAAO,CAACC,GAAG,aAAK;YAAA;UAAA;YAAA;YAIhBf,gBAAgB,CAAC,KAAK,CAAC;YAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAI/B,OACI,KAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MACzBC,MAAM,EAANA,MAAM;MACNF,aAAa,EAAbA,aAAa;MACbF,IAAI,EAAJA;IACJ,CAAE;IAAA,UACGD;EAAQ,EACU;AAE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}