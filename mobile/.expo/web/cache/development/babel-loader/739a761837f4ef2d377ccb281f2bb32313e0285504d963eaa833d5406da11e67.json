{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LATITUDE_DELTA = 0.005;\nvar LONGITUDE_DELTA = 0.005;\nexport function Map() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMsg = _useState4[0],\n    setErrorMsg = _useState4[1];\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, mlocation, region;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n            case 9:\n              mlocation = _context.sent;\n              region = {\n                \"latitude\": mlocation.coords.latitude,\n                \"longitude\": mlocation.coords.longitude,\n                \"latitudeDelta\": LATITUDE_DELTA,\n                \"longitudeDelta\": LONGITUDE_DELTA\n              };\n              setLocation(region);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return _jsx(MapView, {\n    style: {\n      height: '60%',\n      width: '100%'\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocation: true,\n    region: location\n  });\n}","map":{"version":3,"names":["useEffect","useState","MapView","PROVIDER_GOOGLE","Location","LATITUDE_DELTA","LONGITUDE_DELTA","Map","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","mlocation","region","coords","latitude","longitude","height","width"],"sources":["/home/pedro/Documentos/IFMS/projetos/ape-safari-urbano/mobile/src/screens/Map.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport MapView, { PROVIDER_GOOGLE, Region } from \"react-native-maps\";\n\nimport * as Location from 'expo-location';\n\nconst LATITUDE_DELTA = 0.005;\nconst LONGITUDE_DELTA = 0.005;\n\nexport function Map() {\n    const [location, setLocation] = useState<Region>();\n    const [errorMsg, setErrorMsg] = useState<string>('');\n\n    useEffect(() => {\n        (async () => {\n            let { status } = await Location.requestForegroundPermissionsAsync()\n            if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied')\n                return\n            }\n\n            let mlocation = await Location.getCurrentPositionAsync({});\n            let region = {\n                \"latitude\": mlocation.coords.latitude,\n                \"longitude\": mlocation.coords.longitude,\n                \"latitudeDelta\": LATITUDE_DELTA,\n                \"longitudeDelta\": LONGITUDE_DELTA\n            }\n            setLocation(region as Region);\n        })()\n    }, [])\n\n    return (\n        <MapView\n            style={{ height: '60%', width: '100%' }}\n            provider={PROVIDER_GOOGLE}\n            showsUserLocation={true}\n            region={location}\n        >\n\n        </MapView>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,IAAIC,eAAe,QAAgB,mBAAmB;AAEpE,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAAC;AAE1C,IAAMC,cAAc,GAAG,KAAK;AAC5B,IAAMC,eAAe,GAAG,KAAK;AAE7B,OAAO,SAASC,GAAG,GAAG;EAClB,gBAAgCN,QAAQ,EAAU;IAAA;IAA3CO,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCR,QAAQ,CAAS,EAAE,CAAC;IAAA;IAA7CS,QAAQ;IAAEC,WAAW;EAE5BX,SAAS,CAAC,YAAM;IACZ,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BI,QAAQ,CAACQ,iCAAiC,EAAE;YAAA;cAAA;cAA7DC,MAAM,yBAANA,MAAM;cAAA,MACRA,MAAM,KAAK,SAAS;gBAAA;gBAAA;cAAA;cACpBF,WAAW,CAAC,0CAA0C,CAAC;cAAA;YAAA;cAAA;cAAA,iCAIrCP,QAAQ,CAACU,uBAAuB,CAAC,CAAC,CAAC,CAAC;YAAA;cAAtDC,SAAS;cACTC,MAAM,GAAG;gBACT,UAAU,EAAED,SAAS,CAACE,MAAM,CAACC,QAAQ;gBACrC,WAAW,EAAEH,SAAS,CAACE,MAAM,CAACE,SAAS;gBACvC,eAAe,EAAEd,cAAc;gBAC/B,gBAAgB,EAAEC;cACtB,CAAC;cACDG,WAAW,CAACO,MAAM,CAAW;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACjC,GAAG;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,OACI,KAAC,OAAO;IACJ,KAAK,EAAE;MAAEI,MAAM,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAO,CAAE;IACxC,QAAQ,EAAElB,eAAgB;IAC1B,iBAAiB,EAAE,IAAK;IACxB,MAAM,EAAEK;EAAS,EAGX;AAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}